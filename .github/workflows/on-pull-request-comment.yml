name: "branch deploy demo"

# The workflow to execute on is comments that are newly created
on:
  issue_comment:
    types: [created]

# Permissions needed for reacting and adding comments for IssueOps commands
permissions:
  pull-requests: write
  deployments: write
  contents: write
  checks: read
  statuses: read

jobs:
  triggered-deploy:
    if: ${{ github.event.issue.pull_request }} # only run on pull request comments
    runs-on: ubuntu-latest
    steps:
      # Generate a default environment name to ensure we have a unique environment name for each branch
      - name: Set branch name as environment
        run: echo "tmpbranchname=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
      
      - name: Create stage/environment name branch based
        run: echo "branch=$(echo tst-${{ env.branch }} | sed 's/\//_/g' | sed 's/-/_/g' | cut -c 1-20)" >> $GITHUB_ENV

      # Execute IssueOps branch deployment logic, hooray!
      # This will be used to "gate" all future steps below and conditionally trigger steps/deployments
      - uses: github/branch-deploy@v10.3.1
        id: branch-deploy
        with:
          trigger: ".deploy"
          environment: ${{ env.branch }}

      # Checkout your project's repository based on the commit SHA provided by the branch-deploy step
      # It is important to only ever operate on the commit SHA (where possible) as commit SHA's are immutable and you know exactly what you are deploying
      - uses: actions/checkout@v4
        with:
          ref: ${{ steps.branch-deploy.outputs.sha }}

      # Do some fake "noop" deployment logic here
      # conditionally run a noop deployment
      - name: fake noop deploy on environment based on the branch name
        if: ${{ steps.branch-deploy.outputs.continue == 'true' && steps.branch-deploy.outputs.noop == 'true' }}
        run: echo "I am doing a fake noop deploy on environment ${{ steps.branch-deploy.outputs.environment }}"

      # Do some fake "regular" deployment logic here
      # conditionally run a regular deployment
      - name: fake regular deploy
        if: ${{ steps.branch-deploy.outputs.continue == 'true' && steps.branch-deploy.outputs.noop != 'true' }}
        run: echo "Regular deploys are not allowed for this repository. Please use noops."

  # Given a successful deploy, we write a message as a comment on the PR
  write-comment:
    needs: triggered-deploy
    runs-on: ubuntu-latest
    steps:
      - name: Write a comment on the PR
        if: ${{ needs.triggered-deploy.outputs.continue == 'true' }}
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Deployed to environment ${{ steps.branch-deploy.outputs.environment }}'
            })
  